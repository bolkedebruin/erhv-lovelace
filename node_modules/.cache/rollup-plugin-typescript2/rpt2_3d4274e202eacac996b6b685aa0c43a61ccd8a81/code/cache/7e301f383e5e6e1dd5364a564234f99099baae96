{"code":"import { __decorate } from \"tslib\";\r\nimport { LitElement, html, css } from \"lit\";\r\nimport { customElement, property, state } from \"lit/decorators.js\";\r\nimport { findEntities } from \"./common/find-entities\";\r\nconst validEntityId = /^(\\w+)\\.(\\w+)$/;\r\nconst isValidEntityId = (entityId) => validEntityId.test(entityId);\r\nlet ZehnderCard = class ZehnderCard extends LitElement {\r\n    static getConfigElement() {\r\n        // Create and return an editor element\r\n        return document.createElement(\"zehnder-card-editor\");\r\n    }\r\n    static getStubConfig(hass, entities, entitiesFill) {\r\n        const includeDomains = [\"climate\"];\r\n        const maxEntities = 1;\r\n        const foundEntities = findEntities(hass, maxEntities, entities, entitiesFill, includeDomains);\r\n        // Return a minimal configuration that will result in a working card configuration\r\n        return { entity: foundEntities[0] || \"\" };\r\n    }\r\n    setConfig(config) {\r\n        if (!config.entity) {\r\n            throw new Error(\"Entity must be specified\");\r\n        }\r\n        if (config.entity && !isValidEntityId(config.entity)) {\r\n            throw new Error(\"Invalid entity\");\r\n        }\r\n        this._config = config;\r\n        if (this._config.footer) {\r\n            // this._footerElement = createHeaderFooterElement(this._config.footer);\r\n        }\r\n        else if (false) {\r\n            // this._footerElement = undefined;\r\n        }\r\n    }\r\n    render() {\r\n        if (!this.hass || !this._config) {\r\n            return html `Custom card not found!`;\r\n        }\r\n        const stateObj = this.hass.states[this._config.entity];\r\n        if (!stateObj) {\r\n            return html `\n                <ha-card>Unknown entity: ${this._config.entity}</ha-card> `;\r\n        }\r\n        const name = this._config.name || \"NoName\";\r\n        return html `\n            <ha-card>\n                    <!--<p class=\"title\">${name}</p>-->\n                <div class=\"container\">\n                    <div id=\"bg\">\n                        <svg viewBox=\"0 0 850 360\" xmlns=\"http://www.w3.org/2000/svg\"\n                             xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n                            <defs>\n                                <linearGradient id=\"redblue\">\n                                    <stop stop-color=\"#acc0e5\" offset=\"0\"/>\n                                    <stop stop-color=\"#fd7c7a\" offset=\"1\"/>\n                                </linearGradient>\n                                <path id=\"arrow\"\n                                      d=\"m20 39.051h38.019v7.0848l14.228-14.228-14.228-14.228v7.0848h-38.019z\"/>\n                                <!-- to work around safari issues -->\n                                <path id=\"fan\" class=\"primary-path\" d=\"M12,11A1,1 0 0,0 11,12A1,1 0 0,0 12,13A1,1 0 0,0 13,12A1,1 0 \n                0,0 12,11M12.5,2C17,2 17.11,5.57 14.75,6.75C13.76,7.24 13.32,8.29 13.13,9.22C13.61,9.42 14.03,9.73 \n                14.35,10.13C18.05,8.13 22.03,8.92 22.03,12.5C22.03,17 18.46,17.1 17.28,14.73C16.78,13.74 15.72,13.3 \n                14.79,13.11C14.59,13.59 14.28,14 13.88,14.34C15.87,18.03 15.08,22 11.5,22C7,22 6.91,18.42 9.27,\n                17.24C10.25,16.75 10.69,15.71 10.89,14.79C10.4,14.59 9.97,14.27 9.65,13.87C5.96,15.85 2,15.07 2,\n                11.5C2,7 5.56,6.89 6.74,9.26C7.24,10.25 8.29,10.68 9.22,10.87C9.41,10.39 9.73,9.97 10.14,9.65C8.15,5.96 8.94,\n                2 12.5,2Z\">\n                                </path>\n                                <path id=\"speedometer\" class=\"primary-path\" d=\"M12,16A3,3 0 0,1 9,13C9,11.88 9.61,10.9 10.5,10.39L20.21,4.77L14.68,14.35C14.18,15.33 \n                13.17,16 12,16M12,3C13.81,3 15.5,3.5 16.97,4.32L14.87,5.53C14,5.19 13,5 12,5A8,8 0 0,0 4,13C4,15.21 4.89,17.21 6.34,\n                18.65H6.35C6.74,19.04 6.74,19.67 6.35,20.06C5.96,20.45 5.32,20.45 4.93,20.07V20.07C3.12,18.26 2,15.76 2,13A10,10 0 0,\n                1 12,3M22,13C22,15.76 20.88,18.26 19.07,20.07V20.07C18.68,20.45 18.05,20.45 17.66,20.06C17.27,19.67 17.27,19.04 17.66,\n                18.65V18.65C19.11,17.2 20,15.21 20,13C20,12 19.81,11 19.46,10.1L20.67,8C21.5,9.5 22,11.18 22,13Z\">\n                                </path>\n                            </defs>\n                            <g transform=\"translate(5,15)\">\n                                <g class=\"bg\">\n                                    <g transform=\"translate(-.0029998 -30.999)\">\n                                        <path\n                                                d=\"m2.348 64.937h167.97l509.83 202.06 156.51 0.34732-0.29513 59.47-167.59 0.2448-510.45-202.92h-155.97z\"\n                                                fill=\"url(#redblue)\" stroke=\"#000\" stroke-linejoin=\"round\"\n                                                stroke-width=\"2\"/>\n                                        <path\n                                                d=\"m2.348 327.06h167.97l509.83-202.06 156.51-0.34732-0.29513-59.47-167.59-0.2448-510.45 202.92h-155.97z\"\n                                                fill=\"url(#redblue)\" stroke=\"#000\" stroke-linejoin=\"round\"\n                                                stroke-width=\"2\"/>\n                                        <g transform=\"translate(0,62)\" fill=\"#fff\">\n                                            <use xlink:href='#arrow'/>\n                                            <use transform=\"translate(840,0) scale(-1,1)\" xlink:href='#arrow'/>\n                                            <use transform=\"translate(750,203)\" xlink:href='#arrow'/>\n                                            <use transform=\"translate(91,203) scale(-1,1)\" xlink:href='#arrow'/>\n                                        </g>\n                                    </g>\n                                </g>\n                        </svg>\n                    </div>\n\n                    <div id=\"left\">\n                        <!-- start intake -->\n                        <div id=\"intake\">\n                            <svg viewBox=\"0 0 212.5 180\">\n                                <text font-size=\"24px\" x=\"10\" y=\"35\">\n                                    ${this.hass.states['sensor.ca350_outside_temperature'].state}째C\n                                </text>\n                                <text font-size=\"24px\" x=\"54\" y=\"135\">\n                                    ${this.hass.states['sensor.ca350_supply_fan_speed'].state} rpm\n                                </text>\n                                <g transform=\"translate(10, 110) scale(0.2, 0.2)\">\n                                    <svg preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" role=\"img\"\n                                         aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"icon\">\n                                        <g>\n                                            <use xlink:href='#speedometer'/>\n                                        </g>\n                                    </svg>\n                                </g>\n                            </svg>\n                        </div>\n                        <!-- end intake -->\n\n                        <!-- start exhaust -->\n                        <div id=\"exhaust\">\n                            <svg viewBox=\"0 0 212.5 180\">\n                                <text font-size=\"24px\" x=\"10\" y=\"58\">\n                                    ${this.hass.states['sensor.ca350_exhaust_temperature'].state}째C\n                                </text>\n                                <text font-size=\"24px\" x=\"54\" y=\"158\">\n                                    ${Math.trunc(Number(this.hass.states['sensor.ca350_exhaust_fan_speed'].state))} rpm\n                                </text>\n                                <g transform=\"translate(10, 133) scale(0.2, 0.2)\">\n                                    <svg preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" role=\"img\"\n                                         aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"icon\">\n                                        <g>\n                                            <use xlink:href='#speedometer'/>\n                                        </g>\n                                    </svg>\n                                </g>\n                            </svg>\n                        </div>\n                        <!-- end exhaust -->\n                    </div>\n                    <!-- end left column -->\n\n                    <!-- start center column -->\n                    <div id=\"center\">\n                        <div id=\"target_temperature\">\n                            <svg viewBox=\"0 0 80 40\">\n                                <text x=\"50%\" dx=\"1\" y=\"25%\" text-anchor=\"middle\" style=\"font-size:13px\">\n                                    ${this.hass.states[this._config.entity].attributes.temperature}\n                                    <tspan dx=\"-3\" dy=\"-6.5\" style=\"font-size:4px\">째C</tspan>\n                                </text>\n                            </svg>\n                        </div>\n                    </div>\n                    <!-- end center column -->\n\n                    <!-- start right column -->\n                    <div id=\"right\" class=\"right\">\n                        <!-- start return -->\n                        <div id=\"return\">\n                            <svg viewBox=\"0 0 212.5 180\">\n                                <text font-size=\"24px\" x=\"204.5\" y=\"35\" text-anchor=\"end\">\n                                    ${this.hass.states['sensor.ca350_return_temperature'].state}째C\n                                </text>\n                                <text font-size=\"24px\" x=\"160\" y=\"135\" text-anchor=\"end\">\n                                    ${Math.trunc(Number(this.hass.states['sensor.ca350_return_temperature'].state))}%\n                                </text>\n                                <g transform=\"translate(160, 110) scale(0.2, 0.2)\">\n                                    <svg preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" role=\"img\"\n                                         aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"icon\">\n                                        <g>\n                                            <use xlink:href='#fan'/>\n                                        </g>\n                                    </svg>\n                                </g>\n                            </svg>\n                        </div>\n                        <!-- end return -->\n\n                        <!-- start supply -->\n                        <div id=\"supply\">\n                            <svg viewBox=\"0 0 212.5 180\">\n                                <text font-size=\"24px\" x=\"204.5\" y=\"58\" text-anchor=\"end\">\n                                    ${this.hass.states['sensor.ca350_supply_temperature'].state}째C\n                                </text>\n                                <text font-size=\"24px\" x=\"160\" y=\"158\" text-anchor=\"end\">\n                                    ${Math.trunc(Number(this.hass.states['sensor.ca350_supply_air_level'].state))}%\n                                </text>\n                                <g transform=\"translate(160, 133) scale(0.2, 0.2)\">\n                                    <svg preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" role=\"img\"\n                                         aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"icon\">\n                                        <g>\n                                            <use xlink:href='#fan'/>\n                                        </g>\n                                    </svg>\n                                </g>\n                            </svg>\n                        </div>\n                        <!-- end supply -->\n                    </div>\n                    <!-- end right column -->\n                </div>\n                <!-- end container -->\n\n                <div id=\"info\">\n                    <div id=\"modes\">\n                        ${this.getAirFilterTmpl()}\n                        ${this.getPreHeatTmpl()}\n                        ${this.getSummerModeTmpl()}\n                        ${this.getBypassTmpl()}\n                    </div>\n                </div>\n            </ha-card>\n        `;\r\n    }\r\n    //  getFanTmpl() {\r\n    //    if (this.hass.states['binary_sensor.supply_fan'].state == 'on') {\r\n    //      return html `<ha-icon icon=\"mdi:fan\"></ha-icon>`;\r\n    //    } else {\r\n    //      return html `<ha-icon class=\"inactive\" icon=\"mdi:fan\"></ha-icon>`;\r\n    //    }\r\n    //  }\r\n    getAirFilterTmpl() {\r\n        if (!this.hass) {\r\n            return html ``;\r\n        }\r\n        if (this.hass.states['binary_sensor.ca350_filter_status'].state != 'on') {\r\n            return html `\n                <ha-icon class=\"inactive\" icon=\"mdi:air-filter\"></ha-icon>`;\r\n        }\r\n        else {\r\n            return html `\n                <ha-icon class=\"warning\" icon=\"mdi:air-filter\"></ha-icon>`;\r\n        }\r\n    }\r\n    getBypassTmpl() {\r\n        if (!this.hass) {\r\n            return html ``;\r\n        }\r\n        if (this.hass.states['binary_sensor.ca350_bypass_valve'].state == 'on') {\r\n            return html `\n                <ha-icon icon=\"mdi:electric-switch\"></ha-icon>`;\r\n        }\r\n        else {\r\n            return html `\n                <ha-icon class=\"inactive\" icon=\"mdi:electric-switch\"></ha-icon>`;\r\n        }\r\n    }\r\n    getPreHeatTmpl() {\r\n        if (!this.hass) {\r\n            return html ``;\r\n        }\r\n        if (this.hass.states['binary_sensor.ca350_preheating_status'].state == 'on') {\r\n            return html `\n                <ha-icon icon=\"mdi:radiator\"></ha-icon>`;\r\n        }\r\n        else {\r\n            return html `\n                <ha-icon icon=\"mdi:radiator-off\"></ha-icon>`;\r\n        }\r\n    }\r\n    getSummerModeTmpl() {\r\n        if (!this.hass) {\r\n            return html ``;\r\n        }\r\n        if (this.hass.states['binary_sensor.ca350_summer_mode'].state == 'off') {\r\n            return html `\n                <ha-icon icon=\"mdi:snowflake\" style=\"color: var(--cyan-color);\"></ha-icon>`;\r\n        }\r\n        else {\r\n            return html `\n                <ha-icon class=\"inactive\" icon=\"mdi:weather-sunny\"></ha-icon>`;\r\n        }\r\n    }\r\n    // The height of your card. Home Assistant uses this to automatically\r\n    // distribute all cards over the available columns.\r\n    getCardSize() {\r\n        return 7;\r\n    }\r\n    static get styles() {\r\n        return css `\n          text {\n            fill: var(--primary-text-color);\n          }\n\n          .container {\n          }\n\n          #left {\n            position: absolute;\n            top: 0px;\n            left: 0px;\n            width: 25%;\n            height: 100%;\n          }\n\n          #center {\n            position: absolute;\n            width: 50%;\n            height: calc(100% - 40px);\n            box-sizing: border-box;\n            border-radius: 100%;\n            left: 25%;\n            top: 20px;\n            text-align: center;\n            overflow-wrap: break-word;\n            pointer-events: none;\n            min-width: 150px;\n          }\n\n          #right {\n            position: absolute;\n            top: 0px;\n            right: 0px;\n            width: 25%;\n            height: 100%;\n          }\n\n          #info {\n            justify-content: center;\n            text-align: center;\n            padding: 16px;\n            margin-top: -60px;\n            font-size: var(--name-font-size);\n          }\n\n          #modes .selected-icon {\n            color: var(--mode-color);\n          }\n\n          #modes > * {\n            color: var(--disabled-text-color);\n            cursor: pointer;\n            display: inline-block;\n          }\n\n          #intake {\n            height: 50%;\n          }\n\n          #return {\n            height: 50%\n          }\n\n          #intake_fan_speed {\n          }\n\n          #outside_temperature {\n          }\n\n          #exhaust {\n            height: 50%;\n          }\n\n          #supply {\n            height: 50%\n          }\n\n          .fan-speed {\n            margin-top: 35px;\n          }\n\n          .right {\n            text-align: right;\n          }\n\n          .bg {\n            background-size: contain;\n            background-repeat: no-repeat;\n            background-position-y: center;\n          }\n\n          .not-found {\n            background-color: yellow;\n            font-family: sans-serif;\n            font-size: 14px;\n          }\n\n          .col-center {\n            font-size: xxx-large;\n            font-weight: bold;\n            max-width: 100%;\n            margin: auto;\n            width: 100px;\n          }\n\n          .col-out {\n            text-anchor: start;\n            font-size: xx-large;\n          }\n\n          .col-in {\n            text-anchor: end;\n            font-size: xx-large;\n          }\n\n          .fan-state {\n            padding-top: 15px;\n          }\n\n          .icon-right {\n            margin-left: 20px\n          }\n\n          .info-row {\n            background: rgba(0, 0, 0, 0.2);\n            margin-top: 10px;\n            padding: 5px;\n            border-top: rgba(0, 0, 0, 0.4);\n            -webkit-box-shadow: 0px -4px 3px rgba(50, 50, 50, 0.75);\n            -moz-box-shadow: 0px -4px 3px rgba(50, 50, 50, 0.75);\n            box-shadow: 0px -2.5px 3px rgba(0, 0, 0, 0.4);\n            display: flex;\n            justify-content: space-around;\n          }\n\n          .inactive {\n            opacity: 0.7;\n          }\n\n          .warning {\n            color: #d80707db;\n          }\n\n          .icon {\n            fill: currentColor;\n          }\n\n          .medium_icon {\n          }\n\n          .large_icon {\n          }\n\n          .label {\n          }\n\n          .large_label {\n          }\n\n          .sensor {\n            vertical-align: middle;\n            text-align: center;\n            width: 200px;\n            height: 50px;\n          }\n\n          .entity {\n            width: 270px;\n            height: 80px;\n            vertical-align: bottom;\n            position: relative;\n            margin: auto;\n            padding-left: 25px;\n            padding-right: 25px;\n          }\n\n          .spin_supply {\n            transform-box: fill-box;\n            transform-origin: 50% 50%;\n            animation: spin 1s linear infinite;\n            fill: white;\n            stroke: white;\n          }\n\n          .spin_extract {\n            transform-box: fill-box;\n            transform-origin: 50% 50%;\n            animation: spin 1s linear infinite;\n            fill: white;\n            stroke: white;\n          }\n\n          @keyframes spin {\n            100% {\n              transform: rotate(360deg);\n            }\n          }`;\r\n    }\r\n};\r\n__decorate([\r\n    property({ attribute: false })\r\n], ZehnderCard.prototype, \"hass\", void 0);\r\n__decorate([\r\n    state()\r\n], ZehnderCard.prototype, \"_config\", void 0);\r\nZehnderCard = __decorate([\r\n    customElement(\"zehnder-card\")\r\n], ZehnderCard);\r\nexport { ZehnderCard };\r\n","references":["/Users/bolke/dev/lovelace-whr/node_modules/lit/index.d.ts","/Users/bolke/dev/lovelace-whr/node_modules/lit/decorators.d.ts","/Users/bolke/dev/lovelace-whr/node_modules/custom-card-helpers/dist/index.d.ts","/Users/bolke/dev/lovelace-whr/src/common/find-entities.ts","/Users/bolke/dev/lovelace-whr/src/types.ts"]}
