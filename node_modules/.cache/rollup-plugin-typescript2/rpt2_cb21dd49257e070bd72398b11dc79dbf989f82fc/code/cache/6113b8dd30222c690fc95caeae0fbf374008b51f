{"code":"import { computeDomain } from \"custom-card-helpers\";\r\nconst arrayFilter = (array, conditions, maxSize) => {\r\n    if (!maxSize || maxSize > array.length) {\r\n        maxSize = array.length;\r\n    }\r\n    const filteredArray = [];\r\n    for (let i = 0; i < array.length && filteredArray.length < maxSize; i++) {\r\n        let meetsConditions = true;\r\n        for (const condition of conditions) {\r\n            if (!condition(array[i])) {\r\n                meetsConditions = false;\r\n                break;\r\n            }\r\n        }\r\n        if (meetsConditions) {\r\n            filteredArray.push(array[i]);\r\n        }\r\n    }\r\n    return filteredArray;\r\n};\r\nexport const findEntities = (hass, maxEntities, entities, entitiesFallback, includeDomains, entityFilter) => {\r\n    const conditions = [];\r\n    if (includeDomains === null || includeDomains === void 0 ? void 0 : includeDomains.length) {\r\n        conditions.push((eid) => includeDomains.includes(computeDomain(eid)));\r\n    }\r\n    if (entityFilter) {\r\n        conditions.push((eid) => hass.states[eid] && entityFilter(hass.states[eid]));\r\n    }\r\n    const entityIds = arrayFilter(entities, conditions, maxEntities);\r\n    if (entityIds.length < maxEntities && entitiesFallback.length) {\r\n        const fallbackEntityIds = findEntities(hass, maxEntities - entityIds.length, entitiesFallback, [], includeDomains, entityFilter);\r\n        entityIds.push(...fallbackEntityIds);\r\n    }\r\n    return entityIds;\r\n};\r\n","references":["/Users/bolke/dev/lovelace-whr/node_modules/custom-card-helpers/dist/index.d.ts","/Users/bolke/dev/lovelace-whr/node_modules/home-assistant-js-websocket/dist/index.d.ts"]}
