{"code":"import { __decorate } from \"tslib\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport { ERHVSchema } from \"./schema\";\nlet ERHVCardEditor = class ERHVCardEditor extends LitElement {\n    // setConfig works the same way as for the card itself\n    setConfig(config) {\n        this._config = config;\n    }\n    // This function is called when the input element of the editor loses focus\n    entityChanged(ev) {\n        if (!this._config) {\n            return;\n        }\n        const data = ev.detail.value;\n        this._config = { ...this._config, ...data };\n        // A config-changed event will tell lovelace we have made changed to the configuration\n        // this make sure the changes are saved correctly later and will update the preview\n        const event = new CustomEvent(\"config-changed\", {\n            detail: { config: this._config },\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(event);\n    }\n    render() {\n        var _a;\n        if (!this.hass || !this._config) {\n            return html ``;\n        }\n        const data = { ...this._config };\n        data.show_empty = (_a = data.show_empty) !== null && _a !== void 0 ? _a : true;\n        // @focusout below will call entityChanged when the input field loses focus (e.g. the user tabs away or clicks outside of it)\n        return html `\n            <div class=\"card-config\">\n                <ha-form \n                        .hass=${this.hass}\n                        .schema=${ERHVSchema}\n                        .computeLabel=${(s) => { var _a; return (_a = s.label) !== null && _a !== void 0 ? _a : s.name; }}\n                        .data=${data}\n                        @value-changed=${this.entityChanged}\n                </ha-form>\n            </div>\n\n        `;\n    }\n};\n__decorate([\n    state()\n], ERHVCardEditor.prototype, \"_config\", void 0);\n__decorate([\n    property({ attribute: false })\n], ERHVCardEditor.prototype, \"hass\", void 0);\nERHVCardEditor = __decorate([\n    customElement(\"erhv-card-editor\")\n], ERHVCardEditor);\nexport { ERHVCardEditor };\n","references":["/Users/bolke/dev/lovelace-whr/node_modules/lit/index.d.ts","/Users/bolke/dev/lovelace-whr/node_modules/lit/decorators.d.ts","/Users/bolke/dev/lovelace-whr/node_modules/custom-card-helpers/dist/index.d.ts","/Users/bolke/dev/lovelace-whr/src/types.ts","/Users/bolke/dev/lovelace-whr/src/schema.ts"]}
