{"code":"import { computeDomain } from \"custom-card-helpers\";\nconst arrayFilter = (array, conditions, maxSize) => {\n    if (!maxSize || maxSize > array.length) {\n        maxSize = array.length;\n    }\n    const filteredArray = [];\n    for (let i = 0; i < array.length && filteredArray.length < maxSize; i++) {\n        let meetsConditions = true;\n        for (const condition of conditions) {\n            if (!condition(array[i])) {\n                meetsConditions = false;\n                break;\n            }\n        }\n        if (meetsConditions) {\n            filteredArray.push(array[i]);\n        }\n    }\n    return filteredArray;\n};\nexport const findEntities = (hass, maxEntities, entities, entitiesFallback, includeDomains, entityFilter) => {\n    const conditions = [];\n    if (includeDomains === null || includeDomains === void 0 ? void 0 : includeDomains.length) {\n        conditions.push((eid) => includeDomains.includes(computeDomain(eid)));\n    }\n    if (entityFilter) {\n        conditions.push((eid) => hass.states[eid] && entityFilter(hass.states[eid]));\n    }\n    const entityIds = arrayFilter(entities, conditions, maxEntities);\n    if (entityIds.length < maxEntities && entitiesFallback.length) {\n        const fallbackEntityIds = findEntities(hass, maxEntities - entityIds.length, entitiesFallback, [], includeDomains, entityFilter);\n        entityIds.push(...fallbackEntityIds);\n    }\n    return entityIds;\n};\n","references":["/Users/bolke/dev/lovelace-whr/node_modules/custom-card-helpers/dist/index.d.ts","/Users/bolke/dev/lovelace-whr/node_modules/home-assistant-js-websocket/dist/index.d.ts"]}
